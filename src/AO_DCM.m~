function [EP,F,CP] = AO_DCM(P,DCM)
% A wrapper for fitting DCMs with AO.m curvature optimisation routine.
% 
% Input parameter structure, P and a fully specified DCM structure:
%
%    [EP,F,CP] = AO_DCM(P,DCM)
%
% returns posterior parameters [EP], squared error [F] and approximate
% covariance [CP]
%
global DD

DD = DCM;
P  = spm_vec(P);
V  = spm_vec(DCM.M.pC);
ip = find(V);
cm = zeros(length(V),length(ip));

for i = 1:length(ip)
    cm(ip(i),i) = 1;
end

DD.P  = P;
DD.V  = V;
DD.cm = cm;

fprintf('Performing AO optimisation\n');



[X,F,CP]  = AO(@fakeDM,p(:),c,DCM.xY.y,128,12*4,[],1e-3);
EP        = spm_unvec(V*X,DCM.M.pE);

end

function [y] = fakeDM(Px,varargin)
global DD

%V    = DD.V;
PP   = spm_unvec(Px(:),DD.P); 
IS   = spm_funcheck(DD.M.IS);       % Integrator
y    = IS(PP,DD.M,DD.xU);           % Prediction
y    = spm_vec(y);                  
y    = real(y);

end
